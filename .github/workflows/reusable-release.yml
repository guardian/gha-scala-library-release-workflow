name: Scala Library Release Workflow

on:
  workflow_call:
    inputs:
      GITHUB_APP_ID:
        description:
          "App ID for a GitHub App that is allowed to push directly to the default branch. Eg, App ID on:
          https://github.com/organizations/guardian/settings/apps/gu-scala-library-release"
        default: '807361' # Only for use by the Guardian!
        required: false # ...but if you're not the Guardian, you'll want to set this explicitly
        type: string
    secrets:
      SONATYPE_TOKEN:
        description: 'Sonatype authentication token, colon-separated (username:password) - https://central.sonatype.org/publish/generate-token/'
        required: true
      PGP_PRIVATE_KEY:
        description:
          "A passphrase-less PGP private key used to sign artifacts, commits, & tags.
          Should be in normal plaintext (ASCII-armored) format, starting 'BEGIN PGP PUBLIC KEY BLOCK', with no additional BASE64-encoding.
          The passphrase can be removed from an existing key using 'gpg --edit-key <key-id> passwd' : https://unix.stackexchange.com/a/550538/46453"
        required: true
      GITHUB_APP_PRIVATE_KEY:
        description:
          "See https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/managing-private-keys-for-github-apps#generating-private-keys
          Should be in normal plaintext format, starting '-----BEGIN RSA PRIVATE KEY-----'"
        required: true
    outputs:
      RELEASE_VERSION:
        description: "The un-prefixed version number of the release, eg '3.0.1'"
        value: ${{ jobs.push-release-commit.outputs.release-version }}
      RELEASE_TYPE:
        description: "Either 'FULL_MAIN_BRANCH' or 'PREVIEW_FEATURE_BRANCH' - whether this is a full release or a pre-release"
        value: ${{ jobs.init.outputs.release-type }}

jobs:
  init:
    name: ðŸ”’ Init
    runs-on: ubuntu-latest
    outputs:
      pgp-key-fingerprint: ${{ steps.act.outputs.pgp-key-fingerprint }}
      pgp-key-email: ${{ steps.act.outputs.pgp-key-email }}
      release-type: ${{ steps.act.outputs.release-type }}
      version-suffix: ${{ steps.act.outputs.version-suffix }}
    steps:
      - id: act
        uses: guardian/gha-scala-library-release-workflow/actions/init@main
        with:
          pgp-private-key: ${{ secrets.PGP_PRIVATE_KEY }}

  versioning:
    name: ðŸŽŠ Versioning
    needs: init
    runs-on: ubuntu-latest
    outputs:
      library-build-major-java-version: ${{ steps.act.outputs.library-build-major-java-version }}
    steps:
      - id: act
        uses: guardian/gha-scala-library-release-workflow/actions/versioning@main
        with:
          version-suffix: ${{ needs.init.outputs.version-suffix }}

  push-release-commit:
    name: ðŸ”’ Push Release Commit
    # This job may become unusual for this workflow, in that it could be separated into several trusted action calls:
    # * 'extract versioning metadata', a **platform-specific** (sbt/gradle) step which:
    #   - verifies that only *approved* files (eg version.sbt) have been modified, and ideally constrains the modifications
    #   - parses and outputs the version number
    # * 'push verified release commit' - a generic action which pushes the verified content of the release commit to
    #   GitHub, using the GitHub API, which means the release commit is authored & signed by our GitHub App
    needs: [versioning, init]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.act.outputs.release-tag }}
      release-notes-url: ${{ steps.act.outputs.release-notes-url }}
      release-version: ${{ steps.act.outputs.release-version }}
      release-commit-id: ${{ steps.act.outputs.release-commit-id }}
      version-file-path: ${{ steps.act.outputs.version-file-path }}
      version-file-release-sha: ${{ steps.act.outputs.version-file-release-sha }}
      version-file-post-release-content: ${{ steps.act.outputs.version-file-post-release-content }}
      temporary-branch: ${{ steps.act.outputs.temporary-branch }}
    steps:
      - id: act
        uses: guardian/gha-scala-library-release-workflow/actions/push-release-commit@main
        with:
          github-app-id: ${{ inputs.GITHUB_APP_ID }}
          github-app-private-key: ${{ secrets.GITHUB_APP_PRIVATE_KEY }} }

  create-artifacts:
    name: ðŸŽŠ Create artifacts
    needs: [init, versioning, push-release-commit]
    runs-on: ubuntu-latest
    outputs:
      artifact-sha256sums: ${{ steps.act.outputs.artifact-sha256sums }}
    steps:
      - id: act
        uses: guardian/gha-scala-library-release-workflow/actions/create-artifacts@main
        with:
          release-commit-id: ${{ needs.push-release-commit.outputs.release-commit-id }}
          release-notes-url: ${{ needs.push-release-commit.outputs.release-notes-url }}
          library-build-major-java-version: ${{ needs.versioning.outputs.library-build-major-java-version }}
          owner-email: ${{ needs.init.outputs.pgp-key-email }}

  sign:
    name: ðŸ”’ Sign
    needs: [init, push-release-commit, create-artifacts]
    runs-on: ubuntu-latest
    steps:
      - uses: guardian/gha-scala-library-release-workflow/actions/sign@main
        with:
          github-app-id: ${{ inputs.GITHUB_APP_ID }}
          github-app-private-key: ${{ secrets.GITHUB_APP_PRIVATE_KEY }} }
          pgp-key-email: ${{ needs.init.outputs.pgp-key-email }}
          pgp-key-fingerprint: ${{ needs.init.outputs.pgp-key-fingerprint }}
          pgp-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          release-type: ${{ needs.init.outputs.release-type }}
          release-tag: ${{ needs.push-release-commit.outputs.release-tag }}
          release-commit-id: ${{ needs.push-release-commit.outputs.release-commit-id }}
          artifact-sha256sums: ${{ needs.create-artifacts.outputs.artifact-sha256sums }}

  sonatype-release:
    name: ðŸ”’ Sonatype Release
    needs: [push-release-commit, sign]
    runs-on: ubuntu-latest
    steps:
      - uses: guardian/gha-scala-library-release-workflow/actions/sonatype-release@main
        with:
          release-version: ${{ needs.push-release-commit.outputs.release-version }}
          sonatype-token: ${{ secrets.SONATYPE_TOKEN }}

  update-github:
    name: ðŸ”’ Update GitHub
    needs:  [init, push-release-commit, sign]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: guardian/gha-scala-library-release-workflow/actions/update-github@main
        with:
          release-type: ${{ needs.init.outputs.release-type }}
          release-tag: ${{ needs.push-release-commit.outputs.release-tag }}
          release-version: ${{ needs.push-release-commit.outputs.release-version }}
          release-notes-url: ${{ needs.push-release-commit.outputs.release-notes_url }}
          temporary-branch: ${{ needs.push-release-commit.outputs.temporary-branch }}
          github-app-id: ${{ inputs.GITHUB_APP_ID }}
          github-app-private-key: ${{ secrets.GITHUB_APP_PRIVATE_KEY }} }
          version-file-path: ${{ needs.push-release-commit.outputs.version-file-path }}
          version-file-post-release-content: ${{ needs.push-release-commit.outputs.version-file-post-release-content }}
          version-file-release-sha: ${{ needs.push-release-commit.outputs.version-file-release-sha }}

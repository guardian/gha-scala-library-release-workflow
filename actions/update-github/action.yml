name: 'ðŸ”’ Update GitHub'
description: 'Update GitHub with details post-release'
inputs:
  release-type:
    description: "Either 'FULL_MAIN_BRANCH' or 'PREVIEW_FEATURE_BRANCH'"
    required: true
  release-tag:
    description: "Eg 'v1.2.4' - with the 'v' prefix"
    required: true
  release-version:
    description: "The artifact version being released, eg '1.2.4' - without a prefix"
    required: true
  release-notes-url:
    description: "Either a GitHub Release url ('https://github.com/guardian/etag-caching/releases/tag/v8.1.6') or the PR url for a Preview release ('https://github.com/guardian/etag-caching/pull/65')"
    required: true
  temporary-branch:
    description: "The temporary branch that the release commit was pushed to"
    required: true
  github-app-id:
    description:
      "App ID for a GitHub App that is allowed to push directly to the default branch. Eg, App ID on:
      https://github.com/organizations/guardian/settings/apps/gu-scala-library-release"
    required: true
  github-app-private-key:
    description:
      "See https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/managing-private-keys-for-github-apps#generating-private-keys
      Should be in normal plaintext format, starting '-----BEGIN RSA PRIVATE KEY-----'"
    required: true
  version-file-path:
    description: "eg. version.sbt"
    required: true
  version-file-release-sha:
    description: "the SHA of the version.sbt file when it has the non-snapshot release version in it"
    required: true
  version-file-post-release-content:
    description: "the contents of the version.sbt file after the release - with the '-SNAPSHOT' suffix reinstated"
    required: true

runs:
  using: "composite"

  steps:
    - id: generate-github-app-token
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ inputs.github-app-id }}
        private-key: ${{ inputs.github-app-private-key }} }
    - name: Add common values to the GITHUB_ENV - note all subsequent steps have access to the GitHub token with GH_TOKEN
      shell: bash
      run: |
        GITHUB_ACTIONS_PATH="${{ github.server_url }}/${{ github.repository }}/actions"
        GITHUB_WORKFLOW_FILE="release.yml" # Could be derived from $GITHUB_WORKFLOW_REF
        GITHUB_WORKFLOW_URL="$GITHUB_ACTIONS_PATH/workflows/$GITHUB_WORKFLOW_FILE"

        cat << EndOfFile >> $GITHUB_ENV
        GH_REPO=${{ github.repository }}
        GH_TOKEN=${{ steps.generate-github-app-token.outputs.token }}
        GITHUB_WORKFLOW_FILE=$GITHUB_WORKFLOW_FILE
        GITHUB_WORKFLOW_LINK=[GitHub UI]($GITHUB_WORKFLOW_URL)
        GITHUB_WORKFLOW_RUN_LINK=[#${{ github.run_number }}]($GITHUB_ACTIONS_PATH/runs/${{ github.run_id }})
        EndOfFile
    - name: Clean-up temporary branch that was retaining the now-tagged release commit
      shell: bash
      run: |
        gh api --method DELETE /repos/:owner/:repo/git/refs/heads/${{inputs.temporary-branch}}
    - name: Create Github Release and update version.sbt post-release
      if: inputs.release-type == 'FULL_MAIN_BRANCH'
      shell: bash
      run: |
        gh release create ${{inputs.release-tag}} --verify-tag --generate-notes --notes "Release run: $GITHUB_WORKFLOW_RUN_LINK"
        echo "GitHub Release notes: [${{inputs.release-tag}}](${{inputs.release-notes-url}})" >> $GITHUB_STEP_SUMMARY
        
        cat << EndOfFile > commit-message.txt
        Post-release of ${{inputs.release-tag}} by @${{github.actor}}: set snapshot version
        
        Setting snapshot version after @${{github.actor}} published ${{inputs.release-notes-url}}
        EndOfFile
        
        gh api --method PUT /repos/:owner/:repo/contents/${{ inputs.version-file-path }} \
          --field message="@commit-message.txt" \
          --field sha="${{ inputs.version-file-release-sha }}" \
          --field content="${{ inputs.version-file-post-release-content }}"
    - name: Update PR with comment
      if: inputs.release-type == 'PREVIEW_FEATURE_BRANCH'
      shell: bash
      run: |
        cat << EndOfFile > comment_body.txt
        @${{github.actor}} has published a preview version of this PR with release workflow run $GITHUB_WORKFLOW_RUN_LINK, based on commit ${{ github.sha }}:
        
        ${{ inputs.release-version }}
        
        <details>
        <summary>Want to make another preview release?</summary>
        
        Click 'Run workflow' in the $GITHUB_WORKFLOW_LINK, specifying the $GITHUB_REF_NAME branch, or use the [GitHub CLI](https://cli.github.com/) command:
        
        gh workflow run $GITHUB_WORKFLOW_FILE --ref $GITHUB_REF_NAME
        
        </details>
        
        <details>
        <summary>Want to make a full release after this PR is merged?</summary>
        
        Click 'Run workflow' in the $GITHUB_WORKFLOW_LINK, leaving the branch as the default, or use the [GitHub CLI](https://cli.github.com/) command:
        
        gh workflow run $GITHUB_WORKFLOW_FILE
        
        </details>
        EndOfFile
        
        cat comment_body.txt
        
        gh pr comment ${{ github.ref_name }} --body-file comment_body.txt >> $GITHUB_STEP_SUMMARY
